<UserControl
    x:Class="ICSStudio.OrganizerPackage.View.ControllerOrganizerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ICSStudio.OrganizerPackage.ViewModel"
    xmlns:converters="clr-namespace:ICSStudio.Gui.Converters;assembly=ICSStudio.Gui"
    xmlns:view="clr-namespace:ICSStudio.Gui.View;assembly=ICSStudio.Gui"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:behaviors="clr-namespace:ICSStudio.Gui.Behaviors;assembly=ICSStudio.Gui"
    xmlns:ext="clr-namespace:ICSStudio.Gui.Controls;assembly=ICSStudio.Gui"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    d:DesignHeight="300"
    d:DesignWidth="300"
    GotFocus="ControllerOrganizerView_OnGotFocus"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:IsVisibleConverter x:Key="IsVisibleConverter" />
        <!--<utilities:QuickViewRowHeightConverter x:Key="QuickViewRowHeightConverter"/>-->
        <!--<converters:PropertyGridConverter x:Key="PropertyConverter"/>-->
        <view:BindableCommand x:Key="CopyCommand" Command="{Binding CopyCommand}"/>
        <view:BindableCommand x:Key="CutCommand" Command="{Binding CutCommand}"/>
        <view:BindableCommand x:Key="PasteCommand" Command="{Binding PasteCommand}"/>
        <view:BindableCommand x:Key="DeleteCommand" Command="{Binding DeleteCommand}"/>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.CommandBindings>
        <view:RelayCommandBinding 
            Command="{x:Static ApplicationCommands.Copy}"
            RelayCommand="{StaticResource CopyCommand}"/>
        <view:RelayCommandBinding 
            Command="{x:Static ApplicationCommands.Cut}"
            RelayCommand="{StaticResource CutCommand}"/>
        <view:RelayCommandBinding 
            Command="{x:Static ApplicationCommands.Paste}"
            RelayCommand="{StaticResource PasteCommand}"/>
        <view:RelayCommandBinding 
            Command="{x:Static ApplicationCommands.Delete}"
            RelayCommand="{StaticResource DeleteCommand}"/>
    </UserControl.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>

            <RowDefinition Height="Auto" />
            <RowDefinition Height="6*" x:Name="TreeViewRow"/>
            <RowDefinition Height="4*" x:Name="QuickViewRow"/>
        </Grid.RowDefinitions>

        <!--  ToolBar  -->
        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Loaded="ToolBar_Loaded">
                <Button ToolTip="Collapse All &#13;Collapse all tree nodes" Command="{Binding CollapseAllCommand}" VerticalAlignment="Top">
                    <materialDesign:PackIcon Kind="ArrowCollapseAll" />
                </Button>
                <Button ToolTip="Hide\Show Quick View&#13;Toggle the quick view pane" Click="HideOrShowQuickViewButton_OnClick">
                    <materialDesign:PackIcon Kind="Show" />
                </Button>
            </ToolBar>
        </ToolBarTray>

        <!--  TreeView  -->
        <TreeView
            x:Name="ControllerOrganizerTreeView" 
            Grid.Row="1"
            ItemsSource="{Binding ControllerOrganizerItems}"
            ext:TreeViewExtensions.EnableMultiSelect="True" ext:TreeViewExtensions.SelectedItems="{Binding SelectedItems}">
            <!--<i:Interaction.Behaviors>
                <behaviors:TreeViewMultipleSelectionBehavior SelectedItems="{Binding SelectedItems}"/>
            </i:Interaction.Behaviors>-->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <command:EventToCommand Command="{Binding SelectedItemChangedCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBring"></EventSetter>
                    <EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown" />
                    <EventSetter Event="PreviewMouseRightButtonUp" Handler="TreeViewItem_PreviewMouseRightButtonUp" />
                    <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />
                    <EventSetter Event="KeyDown"  Handler="TreeViewItem_KeyDown"></EventSetter>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                    <!--Add by Ender 2022.2.19-->
                    <Setter Property="ext:TreeViewExtensions.NodeType" Value="{Binding NodeType}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                    <Border Name="Bd" Grid.Row="0" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Width" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Height" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="behaviors:TreeViewMultipleSelectionBehavior.IsItemSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                    <!--<Style.Resources>
                        -->
                    <!--override the colour key for the highlighted state-->
                    <!--
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                         Color="LightBlue"/>
                    </Style.Resources>-->
                </Style>

            </TreeView.ItemContainerStyle>

            <TreeView.ContextMenu>
                <ContextMenu Loaded="FrameworkElement_OnLoaded">
                    <MenuItem Header="{DynamicResource HideControllerOrganizer}" Command="{Binding HideControllerOrganizerCommand}"/>
                    <MenuItem Header="{DynamicResource CollapseAll}" Command="{Binding CollapseAllCommand}"/>
                    <MenuItem Header="{DynamicResource ExpandAll}" Command="{Binding ExpandAllCommand}"/>
                    <Separator />
                    <MenuItem x:Name="HideOrShowQuickViewMenuItem" 
                              
                              Click="HideOrShowQuickViewButton_OnClick"/>
                    <!--Header="{Binding Source={x:Reference QuickViewRow}, Path=Height.Value, Converter={StaticResource QuickViewRowHeightConverter}}"-->
                </ContextMenu>
            </TreeView.ContextMenu>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="viewModel:OrganizerItem" ItemsSource="{Binding Path=ProjectItems}">
                    <Grid Margin="2" ToolTip="{Binding ToolTip}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Image Source="{Binding ImageSource}" 
                               RenderOptions.BitmapScalingMode="HighQuality" Width="16" Height="16"/>

                        <TextBlock Grid.Column="2" Text="{Binding DisplayName}" />

                        <Canvas Grid.Column="0" SnapsToDevicePixels="True" 
                                Visibility="{Binding Inhibited,Mode=OneWay,Converter={StaticResource IsVisibleConverter}}">
                            <Path Stroke="Transparent" Fill="Yellow"
                                  Data="M 5,17 A 3.5,3.5 0 1 1 6,17 Z" />
                            <Path Stroke="Black" Data="M 4.5,12 L 4.5,15" />
                            <Path Stroke="Black" Data="M 6.5,12 L 6.5,15" />
                        </Canvas>

                        <Canvas Grid.Column="0" SnapsToDevicePixels="True"
                                Visibility="{Binding IsWarning,Mode=OneWay,Converter={StaticResource IsVisibleConverter}}">
                            <Path Stroke="Gold"  Fill="Gold"  StrokeThickness="0.2">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure IsClosed="True" StartPoint="8,16">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <LineSegment Point="16,16" />
                                                            <LineSegment Point="12,8" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Stroke="Black" Fill="Black" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure IsClosed="True" StartPoint="12.5,11">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <LineSegment Point="12.75,11" />
                                                            <LineSegment Point="12.75,13" />
                                                            <LineSegment Point="12.5,13" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Stroke="Black" Fill="Black" Data="M 12.625,15 A 0.25,0.25 0 1 1 12.625,14.9 Z" StrokeThickness="1">
                            </Path>
                        </Canvas>

                        <Canvas Grid.Column="0"
                                Visibility="{Binding IsMainRoutine,Mode=OneWay,Converter={StaticResource IsVisibleConverter}}">
                            <Canvas.LayoutTransform>
                                <MatrixTransform Matrix="0.5,0,0,0.5,0,0" />
                            </Canvas.LayoutTransform>
                            <Path Fill="Black" Stretch="Uniform" Data="M9,7A2,2 0 0,0 7,9V17H9V9H11V16H13V9H15V17H17V9A2,2 0 0,0 15,7H9Z"/>
                        </Canvas>
                        <Canvas Grid.Column="0" 
                                Visibility="{Binding IsFaultRoutine,Mode=OneWay,Converter={StaticResource IsVisibleConverter}}">
                            <Canvas.LayoutTransform>
                                <MatrixTransform Matrix="0.5,0,0,0.5,0,0" />
                            </Canvas.LayoutTransform>
                            <Path Fill="Orange" Stretch="Uniform" Data="M9,7V17H11V13H14V11H11V9H15V7H9Z"/>
                        </Canvas>

                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <GridSplitter
            Grid.Row="1"
            Height="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom" />
        <!--  QuickView  -->
        <Grid Grid.Row="2">
            <Grid Visibility="{Binding QuickViewVisibility, UpdateSourceTrigger=PropertyChanged}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TreeView
                    Grid.Row="0"
                    IsHitTestVisible="False"
                    ItemsSource="{Binding ItemTreeViewInfo}"
                    Visibility="{Binding ItemTreeViewInfoVisibility, UpdateSourceTrigger=PropertyChanged}" >
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="PreviewMouseRightButtonUp"
                                         Handler="TreeViewItem_PreviewMouseRightButtonUp" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="viewModel:OrganizerItemInfo"
                                                  ItemsSource="{Binding Path=ProjectItems}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock xml:space="preserve" Text="{Binding Space}" />
                                <materialDesign:PackIcon
                                    Margin="2"
                                    Kind="{Binding IconKind, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding IconVisibility}" 
                                    Foreground="{Binding IconForeground}"/>
                                <TextBlock Text="{Binding DisplayName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <DataGrid Grid.Row="1" x:Name="QuickViewDataGrid"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          HeadersVisibility="None"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          ItemsSource="{Binding DataGridInfo, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Height" Value="Auto" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="150">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DisplayName}">
                                        <TextBlock.ToolTip>
                                            <TextBlock Text="{Binding DisplayName}" />
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Value}" TextTrimming="CharacterEllipsis">
                                        <TextBlock.ToolTip>
                                            <TextBlock Text="{Binding Value}"></TextBlock>
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <ScrollBar Grid.Row="2" x:Name="ScrollBar"
                           Orientation="Horizontal"
                           Minimum="0" Maximum="1" ViewportSize="1"
                           SmallChange="1" LargeChange="1" ValueChanged="RangeBase_OnValueChanged" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
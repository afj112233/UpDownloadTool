//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from STGrammar.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

#pragma warning disable 3021
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="STGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ISTGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="STGrammarParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStart([NotNull] STGrammarParser.StartContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtList</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtList([NotNull] STGrammarParser.StmtListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtListEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtListEmpty([NotNull] STGrammarParser.StmtListEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtAssign</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtAssign([NotNull] STGrammarParser.StmtAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtInstr</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtInstr([NotNull] STGrammarParser.StmtInstrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtIf</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIf([NotNull] STGrammarParser.StmtIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtCase</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtCase([NotNull] STGrammarParser.StmtCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtFor</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtFor([NotNull] STGrammarParser.StmtForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtRepeat</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtRepeat([NotNull] STGrammarParser.StmtRepeatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtWhile</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtWhile([NotNull] STGrammarParser.StmtWhileContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtRegionLable</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtRegionLable([NotNull] STGrammarParser.StmtRegionLableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtChinese</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtChinese([NotNull] STGrammarParser.StmtChineseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtExit</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtExit([NotNull] STGrammarParser.StmtExitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtUnexpected</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtUnexpected([NotNull] STGrammarParser.StmtUnexpectedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtEmpty([NotNull] STGrammarParser.StmtEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.error_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorStmt([NotNull] STGrammarParser.ErrorStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.assign_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStmt([NotNull] STGrammarParser.AssignStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorExpr([NotNull] STGrammarParser.ErrorExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="STGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprXor([NotNull] STGrammarParser.ExprXorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorChineseExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorChineseExpr([NotNull] STGrammarParser.ErrorChineseExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprExpr([NotNull] STGrammarParser.ExprExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>XorExprAnd</c>
	/// labeled alternative in <see cref="STGrammarParser.xor_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorExprAnd([NotNull] STGrammarParser.XorExprAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>XorExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.xor_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorExpr([NotNull] STGrammarParser.XorExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] STGrammarParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExprEq</c>
	/// labeled alternative in <see cref="STGrammarParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExprEq([NotNull] STGrammarParser.AndExprEqContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.eq_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExpr([NotNull] STGrammarParser.EqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqExprCmp</c>
	/// labeled alternative in <see cref="STGrammarParser.eq_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExprCmp([NotNull] STGrammarParser.EqExprCmpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CmpExprAdd</c>
	/// labeled alternative in <see cref="STGrammarParser.cmp_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpExprAdd([NotNull] STGrammarParser.CmpExprAddContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CmpExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.cmp_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpExpr([NotNull] STGrammarParser.CmpExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExprMul</c>
	/// labeled alternative in <see cref="STGrammarParser.add_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExprMul([NotNull] STGrammarParser.AddExprMulContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.add_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpr([NotNull] STGrammarParser.AddExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.mul_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExpr([NotNull] STGrammarParser.MulExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulExprNot</c>
	/// labeled alternative in <see cref="STGrammarParser.mul_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExprNot([NotNull] STGrammarParser.MulExprNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.not_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] STGrammarParser.NotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExprNeg</c>
	/// labeled alternative in <see cref="STGrammarParser.not_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExprNeg([NotNull] STGrammarParser.NotExprNegContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NegExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.neg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegExpr([NotNull] STGrammarParser.NegExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NegExprPow</c>
	/// labeled alternative in <see cref="STGrammarParser.neg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegExprPow([NotNull] STGrammarParser.NegExprPowContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowExprFunc</c>
	/// labeled alternative in <see cref="STGrammarParser.pow_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowExprFunc([NotNull] STGrammarParser.PowExprFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.pow_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowExpr([NotNull] STGrammarParser.PowExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FuncExprFunc</c>
	/// labeled alternative in <see cref="STGrammarParser.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncExprFunc([NotNull] STGrammarParser.FuncExprFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FuncExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncExpr([NotNull] STGrammarParser.FuncExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FuncExprPrim</c>
	/// labeled alternative in <see cref="STGrammarParser.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncExprPrim([NotNull] STGrammarParser.FuncExprPrimContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimExprFloat</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimExprFloat([NotNull] STGrammarParser.PrimExprFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimExprBitSel</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimExprBitSel([NotNull] STGrammarParser.PrimExprBitSelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimExprInteger</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimExprInteger([NotNull] STGrammarParser.PrimExprIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimExprItem</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimExprItem([NotNull] STGrammarParser.PrimExprItemContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimExprExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimExprExpr([NotNull] STGrammarParser.PrimExprExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>INFINITYExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitINFINITYExpr([NotNull] STGrammarParser.INFINITYExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NANExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNANExpr([NotNull] STGrammarParser.NANExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EmptyExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.prim_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyExpr([NotNull] STGrammarParser.EmptyExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ItemItem</c>
	/// labeled alternative in <see cref="STGrammarParser.item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitItemItem([NotNull] STGrammarParser.ItemItemContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ItemArray</c>
	/// labeled alternative in <see cref="STGrammarParser.item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitItemArray([NotNull] STGrammarParser.ItemArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IDSelListEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.id_sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIDSelListEmpty([NotNull] STGrammarParser.IDSelListEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IDSelList</c>
	/// labeled alternative in <see cref="STGrammarParser.id_sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIDSelList([NotNull] STGrammarParser.IDSelListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IDSel</c>
	/// labeled alternative in <see cref="STGrammarParser.id_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIDSel([NotNull] STGrammarParser.IDSelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IDSelArray</c>
	/// labeled alternative in <see cref="STGrammarParser.id_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIDSelArray([NotNull] STGrammarParser.IDSelArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArraySelListExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.array_sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySelListExpr([NotNull] STGrammarParser.ArraySelListExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArraySelList</c>
	/// labeled alternative in <see cref="STGrammarParser.array_sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySelList([NotNull] STGrammarParser.ArraySelListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitSel</c>
	/// labeled alternative in <see cref="STGrammarParser.bit_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitSel([NotNull] STGrammarParser.BitSelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitSelExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.bit_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitSelExpr([NotNull] STGrammarParser.BitSelExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorBitSel</c>
	/// labeled alternative in <see cref="STGrammarParser.bit_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorBitSel([NotNull] STGrammarParser.ErrorBitSelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitSelEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.bit_sel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitSelEmpty([NotNull] STGrammarParser.BitSelEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParamListExpr</c>
	/// labeled alternative in <see cref="STGrammarParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamListExpr([NotNull] STGrammarParser.ParamListExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParamList</c>
	/// labeled alternative in <see cref="STGrammarParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] STGrammarParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InstrStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.instr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstrStmt([NotNull] STGrammarParser.InstrStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorInstrStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.instr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorInstrStmt([NotNull] STGrammarParser.ErrorInstrStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] STGrammarParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ElseifStmtList</c>
	/// labeled alternative in <see cref="STGrammarParser.elsif_stmt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifStmtList([NotNull] STGrammarParser.ElseifStmtListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ElseifStmtListEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.elsif_stmt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifStmtListEmpty([NotNull] STGrammarParser.ElseifStmtListEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfElseStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.if_else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfElseStmt([NotNull] STGrammarParser.IfElseStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfElseStmtEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.if_else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfElseStmtEmpty([NotNull] STGrammarParser.IfElseStmtEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStmt([NotNull] STGrammarParser.CaseStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseElemListEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.case_elem_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseElemListEmpty([NotNull] STGrammarParser.CaseElemListEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseElemList</c>
	/// labeled alternative in <see cref="STGrammarParser.case_elem_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseElemList([NotNull] STGrammarParser.CaseElemListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseElem</c>
	/// labeled alternative in <see cref="STGrammarParser.case_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseElem([NotNull] STGrammarParser.CaseElemContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseSelectorMultiCaseSelector</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector_multi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelectorMultiCaseSelector([NotNull] STGrammarParser.CaseSelectorMultiCaseSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseSelectorMulti</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector_multi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelectorMulti([NotNull] STGrammarParser.CaseSelectorMultiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseSelectorNumber</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelectorNumber([NotNull] STGrammarParser.CaseSelectorNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseSelectorCaseSelectorRange</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelectorCaseSelectorRange([NotNull] STGrammarParser.CaseSelectorCaseSelectorRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorCaseSelector</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorCaseSelector([NotNull] STGrammarParser.ErrorCaseSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ErrorCaseSelectorRange</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitErrorCaseSelectorRange([NotNull] STGrammarParser.ErrorCaseSelectorRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseSelectorRange</c>
	/// labeled alternative in <see cref="STGrammarParser.case_selector_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelectorRange([NotNull] STGrammarParser.CaseSelectorRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseElseStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.case_else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseElseStmt([NotNull] STGrammarParser.CaseElseStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseElseStmtEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.case_else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseElseStmtEmpty([NotNull] STGrammarParser.CaseElseStmtEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.for_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] STGrammarParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OptionalBy</c>
	/// labeled alternative in <see cref="STGrammarParser.optional_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalBy([NotNull] STGrammarParser.OptionalByContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OptionalByEmpty</c>
	/// labeled alternative in <see cref="STGrammarParser.optional_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalByEmpty([NotNull] STGrammarParser.OptionalByEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RepeatStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.repeat_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStmt([NotNull] STGrammarParser.RepeatStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="STGrammarParser.while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] STGrammarParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NumberInteger</c>
	/// labeled alternative in <see cref="STGrammarParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberInteger([NotNull] STGrammarParser.NumberIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NumberFloat</c>
	/// labeled alternative in <see cref="STGrammarParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberFloat([NotNull] STGrammarParser.NumberFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerDec</c>
	/// labeled alternative in <see cref="STGrammarParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerDec([NotNull] STGrammarParser.IntegerDecContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerBin</c>
	/// labeled alternative in <see cref="STGrammarParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerBin([NotNull] STGrammarParser.IntegerBinContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerOct</c>
	/// labeled alternative in <see cref="STGrammarParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerOct([NotNull] STGrammarParser.IntegerOctContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerHex</c>
	/// labeled alternative in <see cref="STGrammarParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerHex([NotNull] STGrammarParser.IntegerHexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtRegion</c>
	/// labeled alternative in <see cref="STGrammarParser.region_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtRegion([NotNull] STGrammarParser.StmtRegionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtEndregion</c>
	/// labeled alternative in <see cref="STGrammarParser.region_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtEndregion([NotNull] STGrammarParser.StmtEndregionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="STGrammarParser.empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmpty([NotNull] STGrammarParser.EmptyContext context);
}

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ICSStudio.Gui.Controls"
    xmlns:converters="clr-namespace:ICSStudio.Gui.Converters"
    xmlns:timerPicker="clr-namespace:ICSStudio.Gui.DateTimePicker">
    <Style TargetType="{x:Type timerPicker:TimePicker}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="#ececec" />
        <Setter Property="Hour" Value="00" />
        <Setter Property="Minute" Value="00" />
        <Setter Property="Second" Value="00" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type timerPicker:TimePicker}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="3,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                x:Name="PART_TXTHOUR"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                AutoWordSelection="False"
                                BorderThickness="0"
                                Cursor="Arrow"
                                Focusable="True"
                                Foreground="Black"
                                IsReadOnly="True"
                                IsReadOnlyCaretVisible="False"
                                SelectionBrush="White"
                                Text="{Binding Hour, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0:00}, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Text=":" />
                            <TextBox
                                x:Name="PART_TXTMINUTE"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                AutoWordSelection="False"
                                BorderThickness="0"
                                Cursor="Arrow"
                                Focusable="True"
                                Foreground="Black"
                                IsReadOnly="True"
                                IsReadOnlyCaretVisible="False"
                                Text="{Binding Minute, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0:00}, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Column="3"
                                VerticalAlignment="Center"
                                Text=":" />
                            <TextBox
                                x:Name="PART_TXTSECOND"
                                Grid.Column="4"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                AutoWordSelection="False"
                                BorderThickness="0"
                                Cursor="Arrow"
                                Focusable="True"
                                Foreground="Black"
                                IsReadOnly="True"
                                IsReadOnlyCaretVisible="False"
                                Text="{Binding Second, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0:00}, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox
                                x:Name="PART_TXT4"
                                Grid.Column="5"
                                AutoWordSelection="False"
                                Background="Transparent"
                                BorderThickness="0"
                                Cursor="Arrow"
                                IsReadOnly="True"
                                IsReadOnlyCaretVisible="False" />

                            <Grid
                                x:Name="numIncrease"
                                Grid.Column="5"
                                HorizontalAlignment="Right">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <timerPicker:ButtonUD
                                    x:Name="PART_UP"
                                    Width="17"
                                    Height="11"
                                    VerticalAlignment="Bottom"
                                    ButtonType="Icon"
                                    Focusable="False"
                                    Icon="/ICSStudio.Gui;component/DateTimePicker/Images/arrowTop.png" />
                                <timerPicker:ButtonUD
                                    x:Name="PART_DOWN"
                                    Grid.Row="1"
                                    Width="17"
                                    Height="11"
                                    VerticalAlignment="Top"
                                    ButtonType="Icon"
                                    Focusable="False"
                                    Icon="/ICSStudio.Gui;component/DateTimePicker/Images/arrowBottom.png" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type timerPicker:ButtonUD}">
        <Style.Triggers>
            <Trigger Property="ButtonType" Value="Normal">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#f5f5f5" />
                <Setter Property="MouseOverBackground" Value="#129611" />
                <Setter Property="MousePressedBackground" Value="#1aad19" />
                <Setter Property="Foreground" Value="#606060" />
                <Setter Property="MouseOverForeground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="BorderBrush" Value="#e5e5e5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type timerPicker:ButtonUD}">
                            <Border
                                x:Name="border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    x:Name="txt"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{Binding MouseOverBorderbrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding MousePressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#bbbbbb" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="BorderThickness" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="Icon">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type timerPicker:ButtonUD}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Image
                                    x:Name="Img"
                                    Margin="{TemplateBinding IconMargin}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Source="{TemplateBinding Icon}"
                                    Stretch="Uniform" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.9" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="Text">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#4ecb76" />
                <Setter Property="MouseOverForeground" Value="#4fca76" />
                <Setter Property="MousePressedForeground" Value="#4ecb76" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type timerPicker:ButtonUD}">
                            <TextBlock
                                x:Name="txt"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="IconText">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#696969" />
                <Setter Property="MouseOverForeground" Value="#4ecb76" />
                <Setter Property="MousePressedForeground" Value="#4ecb75" />
                <Setter Property="MouseOverBackground" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type timerPicker:ButtonUD}">
                            <Border
                                x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Image
                                        Margin="{TemplateBinding IconMargin}"
                                        Source="{TemplateBinding Icon}"
                                        Stretch="None" />
                                    <TextBlock
                                        x:Name="Txt"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Txt" Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="Bg" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="Bg" Property="BorderBrush" Value="{Binding MouseOverBorderbrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Txt" Property="Foreground" Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="Bg" Property="Background" Value="{Binding MousePressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
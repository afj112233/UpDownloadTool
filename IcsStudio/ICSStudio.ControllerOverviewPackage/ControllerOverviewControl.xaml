<!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
<UserControl x:Class="ICSStudio.ControllerOverviewPackage.ControllerOverviewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:ICSStudio.Gui.View;assembly=ICSStudio.Gui"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:common="clr-namespace:ICSStudio.Interfaces.Common;assembly=ICSStudio.Interfaces"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Name="Panel">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="10,2"/>
                                <Border BorderThickness="0.35" BorderBrush="Black"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="FloralWhite" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Panel" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="FloralWhite" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.Resources>
                <Style TargetType="Rectangle">
                    <Setter Property="Width" Value="11" />
                    <Setter Property="Height" Value="7" />
                    <Setter Property="Margin" Value="7 3 7 3" />
                    <Setter Property="Stroke" Value="Gray" />
                    <Setter Property="StrokeThickness" Value="1" />
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Rectangle Fill="{Binding OperationModeColor}" />
                <TextBlock Text="{Binding OperationModeDisplay}" />
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Rectangle Fill="{Binding ControllerStateColor}" />
                <TextBlock Text="{Binding ControllerStateDisplay}" />
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Rectangle Fill="DarkGray" />
                <TextBlock Text="{Binding BatteryStateDisplay}" />
            </StackPanel>

            <StackPanel Grid.Row="3" Orientation="Horizontal">
                <Rectangle Fill="DarkGray" />
                <TextBlock Text="{Binding IOStateDisplay}" />
            </StackPanel>

        </Grid>
        <TabControl Grid.Column="1" TabStripPlacement="Bottom">
            <TabControl.Resources>
                <view:BindingProxy x:Key="Proxy" Data="{Binding}" />
            </TabControl.Resources>
            <TabItem>
                <TabItem.Header>
                    <Grid Width="121" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding KeySwitchAndOperation}" />
                        <Button 
                            Name="MyButton"
                            Grid.Column="1" 
                            Width="16" 
                            Height="16" 
                            Background="Transparent"
                            Command="{Binding ButtonCommand}"
                            CommandParameter="{Binding ElementName=MyButton}">
                            <Button.ContextMenu>
                                <ContextMenu x:Name="CommunicationMenu"
                                             PlacementTarget="{Binding ElementName=CommunicationButton}"
                                             DataContext="{Binding Data, Source={StaticResource Proxy}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Opened">
                                            <command:EventToCommand Command="{Binding CommunicationMenuOpenedCommand}"
                                                                    PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <MenuItem Header="{Binding GoOnlineMenu}"
                                              Command="{Binding GoOnlineCommand}" />
                                    <MenuItem Header="{DynamicResource Upload...}"
                                              Command="{Binding UploadCommand}" />
                                    <MenuItem Header="{DynamicResource Download}"
                                              Command="{Binding DownloadCommand}" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Program Mode}"
                                              Command="{Binding ChangeOperationModeCommand}"
                                              CommandParameter="{x:Static common:ControllerOperationMode.OperationModeProgram}" />
                                    <MenuItem Header="{DynamicResource Run Mode}"
                                              Command="{Binding ChangeOperationModeCommand}"
                                              CommandParameter="{x:Static common:ControllerOperationMode.OperationModeRun}" />
                                    <MenuItem Header="{DynamicResource Test Mode}"
                                              Command="{Binding ChangeOperationModeCommand}"
                                              CommandParameter="{x:Static common:ControllerOperationMode.OperationModeDebug}" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Clear Faults}"
                                              Command="{Binding ClearFaultsCommand}" />
                                    <MenuItem Header="{DynamicResource Go To Faults}" 
                                              Command="{Binding GoToFaultsCommand}"/>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Controller Properties}"
                                              Command="{Binding ControllerPropertiesCommand}" />
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </Grid>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock  Text="{DynamicResource Path}"/>
                        <TextBlock  Text="{Binding RecentCommPath, StringFormat=:{0}}" />
                    </StackPanel>
                </Grid>

            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <Grid Width="121" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{DynamicResource No Forces}" />
                        <Button Grid.Column="1" Width="16" Height="16" Background="Transparent"
                                x:Name="ForceButton" Click="ForceButton_OnClick"
                                Command="{Binding ButtonCommand}"
                                CommandParameter="{Binding ElementName=ForceButton}">
                            <Button.ContextMenu>
                                <ContextMenu x:Name="ForceMenu"
                                             PlacementTarget="{Binding ElementName=ForceButton}">
                                    <MenuItem Header="{DynamicResource IO Forcing}">
                                        <MenuItem Header="{DynamicResource Enable All IO Forces}" IsEnabled="False" />
                                        <MenuItem Header="{DynamicResource Disable All IO Forces}" IsEnabled="False" />
                                        <MenuItem Header="{DynamicResource Remove All IO Forces}" IsEnabled="False" />
                                    </MenuItem>
                                    <MenuItem Header="{DynamicResource SFC Forcing}">
                                        <MenuItem Header="{DynamicResource Enable All SFC Forces}" IsEnabled="False" />
                                        <MenuItem Header="{DynamicResource Disable All SFC Forces}" IsEnabled="False" />
                                        <MenuItem Header="{DynamicResource Remove All SFC Forces}" IsEnabled="False" />
                                    </MenuItem>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Controller Properties}" Command="{Binding ControllerPropertiesCommand}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </Grid>
                </TabItem.Header>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <Grid Width="121" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{DynamicResource No Edits}" />
                        <Button Grid.Column="1" Width="16" Height="16" Background="Transparent"
                                x:Name="EditButton" Click="EditButton_OnClick"
                                Command="{Binding ButtonCommand}"
                                CommandParameter="{Binding ElementName=EditButton}">
                            <Button.ContextMenu>
                                <ContextMenu x:Name="EditMenu"
                                             PlacementTarget="{Binding ElementName=EditButton}">

                                    <MenuItem Header="{DynamicResource Accept Pending Program Edits}" IsEnabled="False" />
                                    <MenuItem Header="{DynamicResource Cancel Pending Program Edits}" IsEnabled="False" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Test Accepted Program Edits}" IsEnabled="False" />
                                    <MenuItem Header="{DynamicResource Untest Accepted Program Edits}" IsEnabled="False" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Assemble Accepted Program Edits}" IsEnabled="False" />
                                    <MenuItem Header="{DynamicResource Cancel Accepted Program Edits}" IsEnabled="False" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Finalize All Edits in Program}" IsEnabled="False" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Lock Controller}" IsEnabled="False" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource Controller Properties}" Command="{Binding ControllerPropertiesCommand}"/>

                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </Grid>
                </TabItem.Header>
            </TabItem>

        </TabControl>

    </Grid>
</UserControl>
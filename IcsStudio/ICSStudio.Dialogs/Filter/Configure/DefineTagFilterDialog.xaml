<Window
    x:Class="ICSStudio.Dialogs.Filter.Configure.DefineTagFilterDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ICSStudio.Gui.Controls;assembly=ICSStudio.Gui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:filter="clr-namespace:ICSStudio.Dialogs.Filter"
    xmlns:gui="clr-namespace:ICSStudio.Gui;assembly=ICSStudio.Gui"
    xmlns:local="clr-namespace:ICSStudio.Dialogs.Filter.Configure"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{DynamicResource Define Tag Filter}"
    Width="480"
    Height="460"
    gui:DialogCloser.DialogResult="{Binding DialogResult}"
    ResizeMode="NoResize">
    <Grid Margin="10">
        <Grid.Resources>
            <filter:LeftMarginConverter x:Key="LeftMarginConverter" />
            <filter:GridLeftMarginConverter x:Key="GridLeftMarginConverter" />
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid
                                Width="15"
                                Height="13"
                                SnapsToDevicePixels="True">
                                <!--  Rectangle 9x9 pixels  -->
                                <Rectangle
                                    Width="9"
                                    Height="9"
                                    SnapsToDevicePixels="true"
                                    Stroke="#919191">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                            <GradientStop Offset="0" Color="White" />
                                            <GradientStop Offset="0.5" Color="Silver" />
                                            <GradientStop Offset="1" Color="LightGray" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!--  画一个垂直方向的直线  -->
                                <Rectangle
                                    x:Name="ExpandPath"
                                    Width="1"
                                    Height="5"
                                    SnapsToDevicePixels="true"
                                    Stroke="Black" />
                                <!--  画一个水平方向的直线  -->
                                <Rectangle
                                    Width="5"
                                    Height="1"
                                    SnapsToDevicePixels="true"
                                    Stroke="Black" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  通过IsChecked判断折叠还是展开  -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <filter:TreeViewLineConverter x:Key="LineConverter" />
            <!--  （通用）可视化树孩子样式  -->
            <Style TargetType="{x:Type TreeViewItem}">
                <EventSetter Event="RequestBringIntoView" Handler="EventSetter_OnHandler" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Foreground" Value="#FF565656" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="TabIndex" Value="{Binding Index}" />
                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Margin="{Binding Converter={StaticResource GridLeftMarginConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="Auto" MinWidth="20" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="20" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Connecting Lines  -->
                                <!--  Horizontal line  -->
                                <controls:MultipleCheckBox
                                    Grid.Column="0"
                                    Margin="{Binding Converter={StaticResource LeftMarginConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}"
                                    CanChooseAll="{Binding CanChooseAll}"
                                    CheckType="{Binding CheckType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding Command}" />
                                <Rectangle
                                    x:Name="HorLn"
                                    Grid.Column="1"
                                    Height="1"
                                    Margin="8,0,0,0"
                                    Stroke="Black" />
                                <!--  Vertical line  -->
                                <Rectangle
                                    x:Name="VerLn"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="1"
                                    Margin="-1,-3,0,0"
                                    Stroke="Black" />
                                <!--<ItemsPresenter x:Name="ItemsPresenter"></ItemsPresenter>-->
                                <ToggleButton
                                    x:Name="Expander"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    ClickMode="Press"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpandCollapseToggleStyle}" />
                                <Border
                                    x:Name="Bd"
                                    Grid.Column="2"
                                    Margin="1"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4"
                                    SnapsToDevicePixels="true">
                                    <!--<ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                    <TextBlock Width="145" Text="{Binding Name}" />
                                </Border>
                                <ItemsPresenter
                                    x:Name="ItemsHost"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Grid.ColumnSpan="2" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                </Trigger>

                                <!--  当前层最后一个元素不画下方垂直线  -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                    <Setter TargetName="VerLn" Property="Height" Value="15" />
                                    <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
                                </DataTrigger>
                                <!--  Root第一个元素不显示上方垂直线  -->
                                <Trigger Property="TabIndex" Value="1">
                                    <Setter TargetName="VerLn" Property="Margin" Value="-1,12,0,0" />
                                    <Setter TargetName="VerLn" Property="Height" Value="Auto" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Width" Value="75" />
                <Setter Property="Height" Value="23" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <TextBlock Text="{DynamicResource Filter On:}" />

        <ComboBox
            Grid.Row="1"
            Height="23"
            ItemsSource="{Binding FilterOnList}"
            SelectedItem="{Binding SelectedFilterOnList}"
            SelectionChanged="Selector_OnSelectionChanged" />

        <TextBlock Grid.Row="2" Text="{DynamicResource Include Data Type:}" />

        <TreeView
            Grid.Row="3"
            ItemsSource="{Binding DataTypeItems}"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            ScrollViewer.IsDeferredScrollingEnabled="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}" />
            </TreeView.ItemTemplate>
        </TreeView>

        <TextBlock
            Grid.Row="4"
            Width="450"
            Margin="0,6,0,0"
            VerticalAlignment="Stretch"
            Text="{Binding FilerTypes}"
            TextTrimming="CharacterEllipsis" />

        <DockPanel Grid.Row="5" LastChildFill="False">
            <Button Command="{Binding ClearCommand}" DockPanel.Dock="Left" Content="{DynamicResource Clear Filter}"/>
            <Button Margin="5,0,0,0" DockPanel.Dock="Right" Content="{DynamicResource Help}"/>
            <Button
                Margin="5,0,5,0"
                Command="{Binding CancelCommand}"
                DockPanel.Dock="Right" 
                Content="{DynamicResource Cancel}"/>
            <Button
                Margin="0,0,5,0"
                Command="{Binding OKCommand}"
                DockPanel.Dock="Right"
                Content="{DynamicResource OK}"/>
        </DockPanel>
    </Grid>
</Window>

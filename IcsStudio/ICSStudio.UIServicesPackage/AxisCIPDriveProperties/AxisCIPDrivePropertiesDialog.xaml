<Window x:Class="ICSStudio.UIServicesPackage.AxisCIPDriveProperties.AxisCIPDrivePropertiesDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:filter="clr-namespace:ICSStudio.Dialogs.Filter;assembly=ICSStudio.Dialogs"
        mc:Ignorable="d"
        d:DesignHeight="300" d:DesignWidth="300"
        Width="915" Height="590"
        Title="{Binding Title}"
        ResizeMode="NoResize"
        ShowInTaskbar="False" WindowStartupLocation="CenterOwner" Closed="OnClosed">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/ICSStudio.Gui;component/Resources/styles/Default.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- 可视化树折叠展开的按钮样式 -->
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                                <!-- Rectangle 9x9 pixels -->
                                <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Silver" Offset="0.5"/>
                                            <GradientStop Color="LightGray" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!-- 画一个垂直方向的直线 -->
                                <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                                <!-- 画一个水平方向的直线 -->
                                <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- 通过IsChecked判断折叠还是展开 -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="ExpandPath" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <filter:TreeViewLineConverter x:Key="LineConverter"/>
            <filter:TreeViewLineConverter2 x:Key="LineConverter2"/>
            <!-- （通用）可视化树孩子样式 -->
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="2,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="Visibility" Value="{Binding Visibility, Mode=OneWay}" />
                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition MinWidth="20" Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="15"/>
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <!--<Rectangle Fill="LightYellow" Stroke="Transparent" Opacity="50"></Rectangle>-->
                                <!-- Connecting Lines -->
                                <!-- Horizontal line -->
                                <Rectangle Grid.Column="0"  x:Name="HorLn" Margin="9,0,0,0" Height="1" Stroke="#FF565656" SnapsToDevicePixels="True" StrokeDashCap="Flat" StrokeDashArray="1,1" StrokeDashOffset="2"/>
                                <!-- Vertical line -->
                                <Rectangle Grid.Column="0" x:Name="VerLn" Width="1" Stroke="#FF565656" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="True" Fill="White" StrokeDashCap="Flat" StrokeDashArray="1,1"/>


                                <ToggleButton x:Name="Expander" 
                                      Grid.Column="0" 
                                      Grid.Row="0"  
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                HorizontalAlignment="Left"
                                Grid.Column="1"
                                Margin="0,1"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="PART_Header" 
                                              ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" 
                                        Grid.ColumnSpan="2" 
                                        Grid.Column="1" 
                                        Grid.Row="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="#FF025BC7"/>
                                    <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                </Trigger>
                                <!--被选中后失去焦点-->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#FF025BC7"/>
                                    <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <!-- 当前层最后一个元素不画下方垂直线 -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                    <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                    <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                                </DataTrigger>
                                <!-- Root第一个元素不显示上方垂直线 -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter2}}" Value="true">
                                    <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                    <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Bottom"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>

            </Style>

        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <command:EventToCommand Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="{DynamicResource Categories:}" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="160" />
                <ColumnDefinition
                    Width="1*" />
            </Grid.ColumnDefinitions>
            <TreeView Grid.Column="0" Name="TreeView" Margin="0,0,2,0"
                      ItemsSource="{Binding OptionPanelNodes}"
                      HorizontalContentAlignment="Stretch">
                <!--
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="Visibility" Value="{Binding Visibility, Mode=OneWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                -->
                <TreeView.ItemTemplate>
                    <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" Margin="0 0 0 0">
                            <TextBlock Text="{Binding Title}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                </TreeView.ItemTemplate>
            </TreeView>
            <ScrollViewer Grid.Column="1" Name="OptionPanelScrollViewer"
                          HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top"
                               FontWeight="Bold"
                               Padding="4,0" Text="{Binding OptionPanelTitle}">
                        <TextBlock.Background>
                            <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0.0"
                                                  Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                                    <GradientStop Offset="1.0"
                                                  Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </TextBlock.Background>
                    </TextBlock>
                    <ContentPresenter Content="{Binding OptionPanelContent}" />
                </DockPanel>

            </ScrollViewer>
        </Grid>
        <Separator Grid.Row="2" />
        <DockPanel Grid.Row="3" Margin="0 4 0 4">
            <TextBlock Text="{DynamicResource Axis State:}"/>
            <TextBlock Text="{Binding AxisState}" />
        </DockPanel>
        <DockPanel Grid.Row="4">
            <DockPanel.Resources>
                <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
                    <Setter Property="Margin" Value="4,4,12,4" />
                    <Setter Property="MinWidth" Value="74" />
                </Style>
            </DockPanel.Resources>
            <Button Content="{DynamicResource Manual Tune...}" HorizontalAlignment="Center"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding ManualTuneCommand}" />

            <Button Content="{DynamicResource Help}" DockPanel.Dock="Right" HorizontalAlignment="Right"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding HelpCommand}" TabIndex="4"/>
            <Button Content="{DynamicResource Apply}" DockPanel.Dock="Right" HorizontalAlignment="Right"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding ApplyCommand}" TabIndex="3"/>
            <Button Content="{DynamicResource Cancel}" DockPanel.Dock="Right" HorizontalAlignment="Right" IsCancel="True"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding CancelCommand}" TabIndex="2"/>
            <Button Content="{DynamicResource OK}" DockPanel.Dock="Right" HorizontalAlignment="Right" IsDefault="True"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding OkCommand}" TabIndex="1"/>

        </DockPanel>
    </Grid>
</Window>
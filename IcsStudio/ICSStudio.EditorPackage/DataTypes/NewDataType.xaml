<UserControl
    x:Class="ICSStudio.EditorPackage.DataTypes.NewDataType"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:ICSStudio.Gui.Behaviors;assembly=ICSStudio.Gui"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    xmlns:controls1="clr-namespace:ICSStudio.Components.Controls;assembly=ICSStudio.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataTypes="clr-namespace:ICSStudio.EditorPackage.DataTypes"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:localCommand="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:ICSStudio.Gui.View;assembly=ICSStudio.Gui"
    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="300"
    d:DesignWidth="1000"
    IsEnabled="{Binding IsOnlineEnabled}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <view:BindableCommand x:Key="CutCommand" Command="{Binding CutCommand}" />
            <view:BindableCommand x:Key="CopyCommand" Command="{Binding CopyCommand}" />
            <view:BindableCommand x:Key="PasteCommand" Command="{Binding PasteCommand}" />
            <view:BindableCommand x:Key="DeleteCommand" Command="{Binding DeleteMemberCommand}" />
            <view:BindableCommand x:Key="InsertCommand" Command="{Binding InsertMemberCommand}" />

            <view:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#b0c4de" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style TargetType="DataGridRow">
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <Trigger Property="AlternationIndex" Value="0">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ICSStudio.Gui;component/Resources/styles/Default.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="40" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Text="{DynamicResource Name:}" />
            <controls1:ValidateNameControl
                Grid.Row="0"
                Grid.Column="1"
                Height="25"
                VerticalContentAlignment="Center"
                IsEnabled="{Binding IsEnabled}"
                PreviewKeyDown="TextBox_OnPreviewKeyDown"
                Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding FocusCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls1:ValidateNameControl>
            <TextBlock
                Grid.Row="0"
                Grid.Column="2"
                Text="{Binding Size}" />
            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Text="{DynamicResource Description:}" />
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                VerticalContentAlignment="Center"
                AcceptsReturn="True"
                IsEnabled="{Binding IsDescriptionEnabled}"
                Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                TextWrapping="Wrap">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding FocusCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Grid
                Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{DynamicResource Members:}" />

                <!--  Drag and Drop Popup, no matter where the Popup tag is defined  -->
                <Popup
                    x:Name="DataGridRowPopup"
                    AllowsTransparency="True"
                    IsHitTestVisible="False"
                    Placement="RelativePoint"
                    PlacementTarget="{Binding ElementName=DataGrid}">
                    <!--  Your own Popup construction Use properties of DraggedObject inside for Binding  -->
                    <TextBlock
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="14"
                        FontWeight="Bold"
                        Text="{Binding Path=Name}" />
                </Popup>

                <DataGrid
                    Name="DataGrid"
                    Grid.Row="1"
                    Width="Auto"
                    behaviors:DragDropRowBehavior.CanLastRowDrag="False"
                    behaviors:DragDropRowBehavior.Enabled="True"
                    behaviors:DragDropRowBehavior.PopupControl="{Binding ElementName=DataGridRowPopup}"
                    dataTypes:DataLoadingRowBehavior.Command="{Binding LoadRowCommand}"
                    AlternatingRowBackground="#FFF5F5F5"
                    AlternationCount="2"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserResizeRows="False"
                    GridLinesVisibility="None"
                    ItemsSource="{Binding DataGrid, UpdateSourceTrigger=PropertyChanged}"
                    PreparingCellForEdit="DataGrid_OnPreparingCellForEdit"
                    SelectedValue="{Binding SelectedDataGridRow, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    SelectionMode="Single"
                    SelectionUnit="FullRow"
                    VerticalScrollBarVisibility="Visible"
                    VirtualizingPanel.ScrollUnit="Pixel">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding Data.MemberFocusCommand, Source={StaticResource Proxy}}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="KeyUp">
                            <command:EventToCommand Command="{Binding Data.KeyUpCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.CommandBindings>
                        <view:RelayCommandBinding Command="Cut" RelayCommand="{StaticResource CutCommand}" />
                        <view:RelayCommandBinding Command="Copy" RelayCommand="{StaticResource CopyCommand}" />
                        <view:RelayCommandBinding Command="Paste" RelayCommand="{StaticResource PasteCommand}" />
                        <view:RelayCommandBinding Command="Delete" RelayCommand="{StaticResource DeleteCommand}" />
                        <view:RelayCommandBinding Command="{x:Static dataTypes:NewDataTypeViewModel.InsertUICommand}" RelayCommand="{StaticResource InsertCommand}" />
                    </DataGrid.CommandBindings>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.Items>
                                <MenuItem
                                    Command="{x:Static ApplicationCommands.Cut}"
                                    Header="{DynamicResource Cut}"
                                    InputGestureText="Ctrl + X" />
                                <MenuItem
                                    Command="Copy"
                                    Header="{DynamicResource Copy}"
                                    InputGestureText="Ctrl + C" />
                                <MenuItem
                                    Command="Paste"
                                    Header="{DynamicResource Paste}"
                                    InputGestureText="Ctrl + V" />
                                <Separator />
                                <MenuItem Command="{x:Static ApplicationCommands.Delete}" Header="{DynamicResource DeleteMember}" />
                                <MenuItem Command="{x:Static dataTypes:NewDataTypeViewModel.InsertUICommand}" Header="{DynamicResource InsertMember}" />
                            </ContextMenu.Items>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                        </Style>
                        <Style TargetType="ColumnDefinition" />
                        <Style TargetType="DataGridDetailsPresenter">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <dataTypes:BoolToThicknessConverter x:Key="BoolToThicknessConverter" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#198cff" />
                    </DataGrid.Resources>
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="MinHeight" Value="30" />
                            <Setter Property="localCommand:CommandBehavior.Event" Value="LostFocus" />
                            <Setter Property="localCommand:CommandBehavior.Command" Value="{Binding Data.RowLostFocusCommand, Source={StaticResource Proxy}}" />
                            <Setter Property="localCommand:CommandBehavior.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        </Style>
                    </DataGrid.ItemContainerStyle>

                    <DataGrid.RowHeaderTemplate>
                        <DataTemplate>
                            <TextBlock
                                Width="Auto"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{Binding DataContext.RowHeader, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}}" />
                        </DataTemplate>
                    </DataGrid.RowHeaderTemplate>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Expander Visibility="{Binding ExpanderVisibility}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Expanded">
                                                <command:EventToCommand Command="{Binding Data.ExpandedCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Collapsed">
                                                <command:EventToCommand Command="{Binding Data.CollapsedCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Expander>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="120" IsReadOnly="{Binding Data.IsReadOnly, Source={StaticResource Proxy}}">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource Name}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Border BorderBrush="Red" BorderThickness="{Binding IsNameInvalid, Converter={StaticResource BoolToThicknessConverter}}">
                                            <TextBlock
                                                x:Name="MyText"
                                                VerticalAlignment="Center"
                                                Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                        </Border>
                                        <TextBlock VerticalAlignment="Center" Visibility="{Binding BrushVisibility}">
                                            <TextBlock.Background>
                                                <VisualBrush
                                                    AlignmentX="Left"
                                                    Opacity="0.3"
                                                    Stretch="None"
                                                    TileMode="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock
                                                            FontStyle="Italic"
                                                            Foreground="#FF787171"
                                                            Text="{DynamicResource AddMember}" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </TextBlock.Background>
                                        </TextBlock>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Data.IsReadOnly, Source={StaticResource Proxy}}" Value="True">
                                            <Setter TargetName="MyText" Property="Foreground" Value="Gray" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <controls1:ValidateNameControl
                                        VerticalAlignment="Stretch"
                                        VerticalContentAlignment="Center"
                                        PreviewKeyDown="TextBox_OnPreviewKeyDown"
                                        Text="{Binding Name, UpdateSourceTrigger=LostFocus, Mode=TwoWay}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <command:EventToCommand Command="{Binding Data.NameLostFocusCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </controls1:ValidateNameControl>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="200" IsReadOnly="{Binding Data.IsReadOnly, Source={StaticResource Proxy}}">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource Data Type}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="Red" BorderThickness="{Binding IsDisplayNameInvalid, Converter={StaticResource BoolToThicknessConverter}}">
                                        <TextBlock
                                            x:Name="MyText"
                                            VerticalAlignment="Center"
                                            Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Data.IsReadOnly, Source={StaticResource Proxy}}" Value="True">
                                            <Setter TargetName="MyText" Property="Foreground" Value="Gray" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <controls1:FastAutoCompleteTextBox
                                            VerticalContentAlignment="Center"
                                            IsTextCompletionEnabled="True"
                                            ItemsSource="{Binding Data.AutoComplete, Source={StaticResource Proxy}}"
                                            MaxDropDownHeight="0"
                                            Text="{Binding DisplayName, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                                        <Button
                                            Width="17"
                                            MinWidth="17"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=SelectedItem}"
                                            Content="...">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <command:EventToCommand Command="{Binding Data.NameClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="*" IsReadOnly="{Binding Data.IsDescriptionReadOnly, Source={StaticResource Proxy}}">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource Description}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBox
                                            VerticalContentAlignment="Center"
                                            AcceptsReturn="True"
                                            Text="{Binding Description, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                                    <TextBlock Margin="0,8,0,0" Panel.ZIndex="11">
                                        <Hyperlink Command="{Binding Data.HyperlinkCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow, Mode=FindAncestor}}">
                                            <Canvas>
                                                <Path Canvas.Top="-10" Fill="Black">
                                                    <Path.Data>
                                                        <PathGeometry>
                                                            <PathFigure IsClosed="True" StartPoint="7,0">
                                                                <LineSegment Point="0,7" />
                                                                <LineSegment Point="14,7" />
                                                            </PathFigure>
                                                            <PathFigure StartPoint="3,7">
                                                                <LineSegment Point="3,10" />
                                                                <LineSegment Point="6,10" />
                                                                <LineSegment Point="6,7" />
                                                            </PathFigure>
                                                            <PathFigure StartPoint="8,7">
                                                                <LineSegment Point="8,10" />
                                                                <LineSegment Point="11,10" />
                                                                <LineSegment Point="11,7" />
                                                            </PathFigure>
                                                        </PathGeometry>
                                                    </Path.Data>
                                                </Path>
                                            </Canvas>
                                        </Hyperlink>
                                    </TextBlock>
                                    <ListView
                                        Width="Auto"
                                        Height="30"
                                        Margin="11,0,0,0"
                                        BorderThickness="0"
                                        ItemsSource="{Binding LinkList, UpdateSourceTrigger=PropertyChanged}">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock xml:space="preserve">&gt;</TextBlock>
                                                    <TextBlock>
                                                        <Hyperlink Command="{Binding Data.Hyperlink2Command, Source={StaticResource Proxy}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem, Mode=FindAncestor}}">
                                                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                                        </Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <ListView
                                        Width="Auto"
                                        Height="30"
                                        BorderThickness="0"
                                        ItemsSource="{Binding SecondLinkList, UpdateSourceTrigger=PropertyChanged}">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock xml:space="preserve">&gt;</TextBlock>
                                                    <TextBlock Text="{Binding Name}" />
                                                    <TextBlock xml:space="preserve" Text=" - " />
                                                    <TextBlock FontStyle="Italic" Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>

                                </StackPanel>
                                <ListView
                                    Name="detailList"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    ItemsSource="{Binding DetailList, UpdateSourceTrigger=PropertyChanged}"
                                    SelectedItem="{Binding Data.SelectedListViewItem, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding Data.ListViewFocusCommand, Source={StaticResource Proxy}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">

                                                <TextBlock Visibility="{Binding ExpanderVisibility}">
                                                    <Hyperlink Command="{Binding Data.Hyperlink3Command, Source={StaticResource Proxy}}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}">
                                                        <Canvas>
                                                            <Path Fill="Black">
                                                                <Path.Data>
                                                                    <PathGeometry>
                                                                        <PathFigure IsClosed="True" StartPoint="1,-7">
                                                                            <LineSegment Point="1,0" />
                                                                            <LineSegment Point="2,0" />
                                                                            <LineSegment Point="2,-7" />
                                                                        </PathFigure>

                                                                        <PathFigure IsClosed="True" StartPoint="4,-7">
                                                                            <LineSegment Point="4,0" />
                                                                            <LineSegment Point="7.5,-3.5" />
                                                                        </PathFigure>
                                                                    </PathGeometry>
                                                                </Path.Data>
                                                            </Path>
                                                        </Canvas>
                                                    </Hyperlink>
                                                </TextBlock>
                                                <TextBlock Margin="10,0,0,0" Text="{Binding Name}" />
                                                <TextBlock Margin="10,0,0,0" Text="-" />
                                                <TextBlock Margin="10,0,0,0" Text="{Binding DisplayName}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>

            </Grid>
            <StackPanel
                Grid.Row="5"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Right"
                CanHorizontallyScroll="True"
                Orientation="Horizontal">
                <Button
                    Width="74"
                    Height="20"
                    Command="{Binding OkCommand}"
                    Content="{DynamicResource OK}"
                    IsDefault="True" />
                <Button
                    Width="74"
                    Height="20"
                    Command="{Binding CancelCommand}"
                    Content="{DynamicResource Cancel}"
                    IsCancel="True" />
                <Button
                    Width="74"
                    Height="20"
                    Command="{Binding ApplyCommand}"
                    Content="{DynamicResource Apply}" />
                <Button
                    Width="74"
                    Height="20"
                    Content="{DynamicResource Help}" />
            </StackPanel>

            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Width="100"
                Text="{DynamicResource Maximum Characters：}"
                TextWrapping="Wrap"
                Visibility="{Binding MaxCharVisibility}" />
            <StackPanel
                Grid.Row="2"
                Grid.Column="1"
                Visibility="{Binding MaxCharVisibility}">
                <TextBox
                    Width="80"
                    Height="25"
                    Margin="0,5,0,0"
                    HorizontalAlignment="Left"
                    InputMethod.IsInputMethodEnabled="False"
                    IsEnabled="{Binding IsEnabled}"
                    PreviewKeyDown="UIElement_OnPreviewKeyDown"
                    Text="{Binding MaxNumberOfChar, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <TextBlock
                    VerticalAlignment="Bottom"
                    FontSize="8"
                    Text="{DynamicResource Enter A Value Between}" />
            </StackPanel>

        </Grid>
        <GridSplitter
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Stretch" />
        <xctk:PropertyGrid
            Grid.Column="2"
            AutoGenerateProperties="True"
            HideInheritedProperties="{Binding IsHideInherited}"
            NameColumnWidth="110"
            SelectedObject="{Binding Property, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <xctk:PropertyGrid.Resources>
                <view:BindingProxy x:Key="Proxy" Data="{Binding}" />
                <Style TargetType="TextBox">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style TargetType="Grid">
                    <Setter Property="Margin" Value="0" />
                </Style>
            </xctk:PropertyGrid.Resources>
            <xctk:PropertyGrid.EditorDefinitions>
                <xctk:EditorTemplateDefinition TargetProperties="DataTypeSize">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock
                                    Height="18"
                                    VerticalAlignment="Center"
                                    Text="{Binding Value, Mode=TwoWay}" />
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="DisplayStyle">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <ComboBox
                                    DisplayMemberPath="DisplayName"
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Data.StyleTypes, Source={StaticResource Proxy}}"
                                    SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    SelectedValuePath="Value" />
                                <!--<TextBlock  VerticalAlignment="Stretch" Text="{Binding Value,Mode=TwoWay}" Visibility="{Binding Data.IsVisibility,Source={StaticResource Proxy},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"></TextBlock>-->
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="Name">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <controls1:ValidateNameControl
                                    VerticalAlignment="Stretch"
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="Description">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBox
                                    VerticalAlignment="Stretch"
                                    IsReadOnly="{Binding Data.IsDescriptionReadOnly, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Value, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                                <Button
                                    MinWidth="20"
                                    HorizontalAlignment="Right"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=xctk:PropertyGrid}, Path=SelectedObject}"
                                    Content="..."
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <command:EventToCommand Command="{Binding Data.PropertyValueCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="DataType">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <controls1:FastAutoCompleteTextBox
                                    VerticalAlignment="Stretch"
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    IsTextCompletionEnabled="True"
                                    ItemsSource="{Binding Data.AutoComplete, Source={StaticResource Proxy}}"
                                    MaxDropDownHeight="0"
                                    Text="{Binding Value, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />

                                <Button
                                    Width="20"
                                    MinWidth="20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Command="{Binding Data.PropertiesCommand, Source={StaticResource Proxy}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=xctk:PropertyGrid}, Path=SelectedObject}"
                                    Content="..."
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="EngineeringUnit">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBox
                                    VerticalAlignment="Stretch"
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Value, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                                <Button
                                    MinWidth="20"
                                    HorizontalAlignment="Right"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=xctk:PropertyGrid}, Path=SelectedObject}"
                                    Content="..."
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <command:EventToCommand Command="{Binding Data.PropertyValue2Command, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
                <xctk:EditorTemplateDefinition TargetProperties="ExternalAccess">
                    <xctk:EditorTemplateDefinition.EditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <ComboBox
                                    DisplayMemberPath="DisplayName"
                                    IsEnabled="{Binding Data.IsPropertyEnabled, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Data.ExternalAccessList, Source={StaticResource Proxy}}"
                                    SelectedValue="{Binding Value}"
                                    SelectedValuePath="Value" />
                            </Grid>
                        </DataTemplate>
                    </xctk:EditorTemplateDefinition.EditingTemplate>
                </xctk:EditorTemplateDefinition>
            </xctk:PropertyGrid.EditorDefinitions>
        </xctk:PropertyGrid>
    </Grid>


</UserControl>
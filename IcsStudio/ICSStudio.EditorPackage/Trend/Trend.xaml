<UserControl
    x:Class="ICSStudio.EditorPackage.Trend.Trend"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:ICSStudio.EditorPackage.Trend"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:oxy="http://oxyplot.org/wpf"
    xmlns:view="clr-namespace:ICSStudio.Gui.View;assembly=ICSStudio.Gui"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="300"
    d:DesignWidth="1200"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <view:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <Style TargetType="{x:Type Button}">
                <Setter Property="Height" Value="21" />
                <Setter Property="Width" Value="65" />
                <Setter Property="Margin" Value="4" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel
            Height="40"
            Background="#CFD6E5"
            Orientation="Horizontal">
            <Button
                Command="{Binding RunCommand}"
                Content="{DynamicResource Run}"
                Visibility="{Binding LogButtonVisibility}" />
            <Button
                Command="{Binding StopCommand}"
                Content="{DynamicResource Stop}"
                Visibility="{Binding LogButtonVisibility}" />
            <Button
                Command="{Binding ErrorCommand}"
                Content="{DynamicResource Errors...}"
                Visibility="{Binding LogButtonVisibility}" />
            <Button
                Name="MyButton"
                Background="Transparent"
                BorderThickness="0"
                Command="{Binding LogButtonCommand}"
                CommandParameter="{Binding ElementName=MyButton}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem 
                            Command="{Binding Data.SaveLogCommand, Source={StaticResource Proxy}}"
                            Header="{DynamicResource SaveTrend Log As...}"/>
                        <MenuItem
                            Command="{Binding Data.DeleteCommand, Source={StaticResource Proxy}}"
                            Header="{DynamicResource Delete Capture}">
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Content>
                    <Grid HorizontalAlignment="Center">
                        <TextBlock Text="{DynamicResource Log}" />
                        <Path Fill="Black">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="24,8">
                                        <LineSegment Point="29,8" />
                                        <LineSegment Point="26.5,13" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                </Button.Content>
            </Button>
            <Border
                Margin="10,4,4,4"
                Padding="2"
                VerticalAlignment="Center"
                BorderBrush="Black"
                BorderThickness="1"
                Visibility="{Binding LogButtonVisibility}">
                <TextBlock Width="110" Text="{Binding LogStatus}" />
            </Border>
            <Border
                Margin="4,4,4,4"
                Padding="2"
                VerticalAlignment="Center"
                BorderBrush="Black"
                BorderThickness="1">
                <TextBlock Width="110" Text="{Binding SamplePeriod}" />
            </Border>

            <TextBlock
                Margin="10,4,4,4"
                VerticalAlignment="Center"
                Text="{DynamicResource Capture:}" />
            <xctk:SingleUpDown
                Width="50"
                Height="21"
                Margin="4"
                IsEnabled="False"
                Text="1" />
            <TextBlock
                Margin="0,4,4,4"
                VerticalAlignment="Center"
                Text="of 1" />
        </StackPanel>

        <DockPanel Grid.Row="1" LastChildFill="True" Grid.IsSharedSizeScope="True">
            <ItemsControl
                Name="MaxMinControl"
                MinWidth="100"
                Margin="5"
                DockPanel.Dock="Left"
                ItemsSource="{Binding MinMaxDataCollection}"
                Visibility="{Binding MinMaxDataCollectionVisibility}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch" Visibility="{Binding Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding Data.MaxMinGridCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor, AncestorLevel=1}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                                        <EasingColorKeyFrame KeyTime="0" Value="#0080FF" />
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                        <EasingThicknessKeyFrame KeyTime="0" Value="1" />
                                                    </ThicknessAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                                        <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                        <EasingThicknessKeyFrame KeyTime="0" Value="1" />
                                                    </ThicknessAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="20" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                            </Grid.ColumnDefinitions>
                            <Border>
                                <Grid Background="{Binding Background}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <command:EventToCommand Command="{Binding Data.ColorDoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBlock
                                        Width="30"
                                        Height="{Binding Width}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Background="{Binding PenColor}" />
                                    <Line
                                        Fill="White"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding CrossVisibility}"
                                        X1="3"
                                        X2="30"
                                        Y1="0"
                                        Y2="17" />
                                    <Line
                                        Fill="White"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding CrossVisibility}"
                                        X1="3"
                                        X2="30"
                                        Y1="17"
                                        Y2="0" />
                                    <Rectangle
                                        Width="28"
                                        Height="18"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding SelectedStateVisibility}" />
                                </Grid>
                            </Border>
                            <Border Grid.Column="1" HorizontalAlignment="Stretch">
                                <TextBlock
                                    Name="DisplayName"
                                    HorizontalAlignment="Left"
                                    Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                    Text="{Binding DisplayName}"
                                    ToolTip="{Binding Name}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <command:EventToCommand Command="{Binding Data.DoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBlock>
                            </Border>
                            <Border
                                Grid.Column="2"
                                Background="Transparent"
                                Visibility="{Binding ValueVisibility}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickValueCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="MaxValue"
                                    MinWidth="20"
                                    HorizontalAlignment="Left"
                                    Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                    Text="{Binding ShowMax}"
                                    ToolTip="{Binding ShowMax}" />
                            </Border>

                            <Border
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Text="{Binding Units}" />
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="2"
                                Background="Transparent"
                                Visibility="{Binding ValueVisibility}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickValueCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="MinValue"
                                    MinWidth="20"
                                    HorizontalAlignment="Left"
                                    Text="{Binding ShowMin}"
                                    ToolTip="{Binding ShowMin}" />
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <StackPanel DockPanel.Dock="Right">
                <TextBlock Text="{Binding Clock}" Visibility="{Binding ClockVisibility}" />
                <ItemsControl
                    Width="105"
                    ItemsSource="{Binding MinMaxDataCollection}"
                    Visibility="{Binding LiveDataVisibility}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                </Style>
                            </DataTemplate.Resources>
                            <Border
                                Margin="4"
                                Background="Transparent"
                                Visibility="{Binding Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Width="auto"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Right"
                                        Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                        Text="{Binding ShowValue}"
                                        TextAlignment="Right"
                                        ToolTip="{Binding ShowValue}" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Height="4"
                                        HorizontalAlignment="Stretch"
                                        Background="{Binding PenColor}" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <StackPanel
                x:Name="Buttons"
                DockPanel.Dock="Bottom"
                Orientation="Horizontal"
                Visibility="{Binding ScrollingToolbar}">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" />
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#D3D3D3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="#D3D3D3" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Button Command="{Binding ScheduleCommand1}" ToolTip="Oldest Data">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="-10,0">
                                        <LineSegment Point="-10,10" />
                                        <LineSegment Point="-5,10" />
                                        <LineSegment Point="-5,0" />
                                    </PathFigure>

                                    <PathFigure IsClosed="True" StartPoint="0,5">
                                        <LineSegment Point="10,10" />
                                        <LineSegment Point="10,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Button Command="{Binding ScheduleCommand2}" ToolTip="{Binding BackwardTooltip1}">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="-10,5">
                                        <LineSegment Point="0,10" />
                                        <LineSegment Point="0,0" />
                                    </PathFigure>

                                    <PathFigure IsClosed="True" StartPoint="0,5">
                                        <LineSegment Point="10,10" />
                                        <LineSegment Point="10,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Button Command="{Binding ScheduleCommand3}" ToolTip="{Binding BackwardTooltip2}">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>

                                    <PathFigure IsClosed="True" StartPoint="0,5">
                                        <LineSegment Point="10,10" />
                                        <LineSegment Point="10,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <ToggleButton
                    Command="{Binding ScheduleCommand4}"
                    IsChecked="{Binding ScheduleCommand4Checked, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                    ToolTip="Scroll">
                    <ToggleButton.Content>
                        <Path Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ToggleButton}, Path=Foreground}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="0,0">
                                        <LineSegment Point="0,10" />
                                        <LineSegment Point="-5,10" />
                                        <LineSegment Point="-5,0" />
                                    </PathFigure>

                                    <PathFigure IsClosed="True" StartPoint="3,0">
                                        <LineSegment Point="3,10" />
                                        <LineSegment Point="8,10" />
                                        <LineSegment Point="8,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </ToggleButton.Content>
                </ToggleButton>
                <Button Command="{Binding ScheduleCommand5}" ToolTip="{Binding ForwardTooltip1}">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="10,5">
                                        <LineSegment Point="0,10" />
                                        <LineSegment Point="0,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Button Command="{Binding ScheduleCommand6}" ToolTip="{Binding ForwardTooltip2}">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="0,5">
                                        <LineSegment Point="-10,10" />
                                        <LineSegment Point="-10,0" />
                                    </PathFigure>

                                    <PathFigure IsClosed="True" StartPoint="10,5">
                                        <LineSegment Point="0,10" />
                                        <LineSegment Point="0,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Button Command="{Binding ScheduleCommand7}" ToolTip="Most Current Data">
                    <Button.Content>
                        <Path>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="0,5">
                                        <LineSegment Point="-10,10" />
                                        <LineSegment Point="-10,0" />
                                    </PathFigure>

                                    <PathFigure IsClosed="True" StartPoint="5,0">
                                        <LineSegment Point="5,10" />
                                        <LineSegment Point="10,10" />
                                        <LineSegment Point="10,0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
            </StackPanel>
            <ItemsControl
                x:Name="MaxMinBottomControl"
                Height="{Binding BottomControlHeight}"
                MinWidth="100"
                AlternationCount="100"
                DockPanel.Dock="Bottom"
                ItemsSource="{Binding MinMaxDataCollection}"
                Visibility="{Binding BottomVisibility}">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <ScrollViewer
                            CanContentScroll="True"
                            ScrollChanged="ScrollViewer_OnScrollChanged"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Visibility="{Binding Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding Data.MaxMinGridCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor, AncestorLevel=1}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="Height" Value="20" />
                                    <Setter Property="MinWidth" Value="35" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                                        <EasingColorKeyFrame KeyTime="0" Value="#0080FF" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                                        <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="14" />
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="14"
                                    SharedSizeGroup="D" />
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="14"
                                    SharedSizeGroup="E" />
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="14"
                                    SharedSizeGroup="H" />
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="14"
                                    SharedSizeGroup="F" />
                                <ColumnDefinition Width="*" MinWidth="14" />
                            </Grid.ColumnDefinitions>
                            <Border
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                MinWidth="10"
                                Visibility="{Binding HeaderVisibility}">
                                <TextBlock HorizontalAlignment="Center" Text="Caption" />
                            </Border>
                            <Border
                                Grid.Row="0"
                                Grid.Column="2"
                                MinWidth="10"
                                BorderThickness="0,1,1,1"
                                Visibility="{Binding HeaderVisibility}">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Data.Clock, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                            </Border>
                            <Border
                                Grid.Row="0"
                                Grid.Column="3"
                                MinWidth="10"
                                BorderThickness="0,1,1,1"
                                Visibility="{Binding HeaderVisibility}">
                                <TextBlock HorizontalAlignment="Center" Text="Min" />
                            </Border>
                            <Border
                                Grid.Row="0"
                                Grid.Column="4"
                                MinWidth="10"
                                BorderThickness="0,1,1,1"
                                Visibility="{Binding HeaderVisibility}">
                                <TextBlock HorizontalAlignment="Center" Text="Max" />
                            </Border>
                            <Border
                                Grid.Row="0"
                                Grid.Column="5"
                                MinWidth="10"
                                BorderThickness="0,1,1,1"
                                Visibility="{Binding HeaderVisibility}">
                                <TextBlock HorizontalAlignment="Center" Text="Units" />
                            </Border>

                            <Border
                                Grid.Row="1"
                                Grid.Column="0"
                                MinWidth="10"
                                BorderThickness="1,0,1,1">
                                <Grid Background="{Binding Background}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <command:EventToCommand Command="{Binding Data.ColorDoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBlock
                                        Width="30"
                                        Height="{Binding Width}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Background="{Binding PenColor}" />
                                    <Line
                                        Fill="White"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding CrossVisibility}"
                                        X1="3"
                                        X2="30"
                                        Y1="0"
                                        Y2="17" />
                                    <Line
                                        Fill="White"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding CrossVisibility}"
                                        X1="3"
                                        X2="30"
                                        Y1="17"
                                        Y2="0" />
                                    <Rectangle
                                        Width="28"
                                        Height="18"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="{Binding SelectedStateVisibility}" />
                                </Grid>
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="10"
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0,0,1,1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="DisplayName"
                                    MinWidth="10"
                                    HorizontalAlignment="Left"
                                    Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                    Text="{Binding DisplayName}"
                                    ToolTip="{Binding Name}" />
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="2"
                                MinWidth="10"
                                Background="Transparent"
                                BorderBrush="Black"
                                BorderThickness="0,0,1,1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="Value"
                                    MinWidth="90"
                                    HorizontalAlignment="Right"
                                    Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                    Text="{Binding ShowValue}"
                                    TextAlignment="Right"
                                    TextTrimming="WordEllipsis"
                                    ToolTip="{Binding ShowValue}" />
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="3"
                                MinWidth="10"
                                Background="Transparent"
                                BorderThickness="0,0,1,1"
                                Visibility="{Binding ValueVisibility}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickValueCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="MaxValue"
                                    MinWidth="20"
                                    HorizontalAlignment="Right"
                                    Foreground="{Binding Data.TextColorBrush, Source={StaticResource Proxy}}"
                                    Text="{Binding ShowMax}"
                                    TextAlignment="Right"
                                    ToolTip="{Binding ShowMax}" />
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="4"
                                MinWidth="10"
                                Background="Transparent"
                                BorderThickness="0,0,1,1"
                                Visibility="{Binding ValueVisibility}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickValueCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock
                                    Name="MinValue"
                                    MinWidth="20"
                                    HorizontalAlignment="Right"
                                    Text="{Binding ShowMin}"
                                    TextAlignment="Right"
                                    ToolTip="{Binding ShowMin}" />
                            </Border>
                            <Border
                                Grid.Row="1"
                                Grid.Column="5"
                                MinWidth="10"
                                Background="Transparent"
                                BorderThickness="0,0,1,1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <command:EventToCommand Command="{Binding Data.DoubleClickCommand, Source={StaticResource Proxy}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Text="{Binding Units}" />
                            </Border>
                        </Grid>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Grid DockPanel.Dock="Top">
                <oxy:PlotTrendView
                    Name="PlotTrendView"
                    Model="{Binding PlotModel}"
                    SizeChanged="PlotView_OnSizeChanged"
                    Visibility="{Binding DisplayNormalTrendVisibility}">
                    <oxy:PlotTrendView.ContextMenu>
                        <ContextMenu Opened="ContextMenu_OnOpened">
                            <MenuItem
                                Command="{Binding Data.ScrollCommand, Source={StaticResource Proxy}}"
                                Header="{DynamicResource Scroll}"
                                IsChecked="{Binding Data.ScrollChecked, Source={StaticResource Proxy}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <MenuItem Header="{DynamicResource ActiveValueBar}">
                                <MenuItem.Items>
                                    <MenuItem
                                        Command="{Binding Data.ValueCommand, Source={StaticResource Proxy}}"
                                        Header="{DynamicResource TrendValue}"
                                        IsChecked="{Binding Data.ValueCommandChecked, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                                    <MenuItem
                                        Command="{Binding Data.DeltaCommand, Source={StaticResource Proxy}}"
                                        Header="{DynamicResource Delta}"
                                        IsChecked="{Binding Data.DeltaCommandChecked, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                                </MenuItem.Items>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding Data.ShowValueBarCommand, Source={StaticResource Proxy}}"
                                Header="{DynamicResource ShowValueBar}"
                                IsChecked="{Binding Data.ShowValueBarChecked, Source={StaticResource Proxy}}" />
                            <MenuItem
                                Command="{Binding Data.ResetCommand, Source={StaticResource Proxy}}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                Header="{DynamicResource UndoZoomOrPan}" />
                            <MenuItem Command="{Binding Data.PrintCommand, Source={StaticResource Proxy}}" Header="{DynamicResource PrintTrend}" />
                            <MenuItem Header="{DynamicResource CreateSnapshot..}" IsEnabled="False" />
                            <Separator />
                            <MenuItem Command="{Binding Data.ChartPropertiesCommand, Source={StaticResource Proxy}}" Header="{DynamicResource ChartProperties}" />
                            <!--<MenuItem Command="{Binding Data.ExportTrendServerDataCommand, Source={StaticResource Proxy}}" Header="ExportTrendServerData(For Test)" />-->
                        </ContextMenu>
                    </oxy:PlotTrendView.ContextMenu>
                </oxy:PlotTrendView>
                <ItemsControl
                    x:Name="IsolatedPlotModels"
                    Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth}"
                    Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}"
                    IsVisibleChanged="UIElement_OnIsVisibleChanged"
                    ItemsSource="{Binding PlotModels}"
                    Loaded="FrameworkElement_OnLoaded"
                    SizeChanged="PlotView_OnSizeChanged"
                    Visibility="{Binding DisplayIsolatedTrendVisibility}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <oxy:PlotTrendView
                                Height="170"
                                BorderBrush="White"
                                BorderThickness="1"
                                Model="{Binding}">
                                <oxy:PlotTrendView.ContextMenu>
                                    <ContextMenu Opened="ContextMenu_OnOpened">
                                        <MenuItem
                                            Command="{Binding Data.ScrollCommand, Source={StaticResource Proxy}}"
                                            Header="{DynamicResource Scroll}"
                                            IsChecked="{Binding Data.ScrollChecked, Source={StaticResource Proxy}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <MenuItem Header="{DynamicResource ActiveValueBar}">
                                            <MenuItem.Items>
                                                <MenuItem
                                                    Command="{Binding Data.ValueCommand, Source={StaticResource Proxy}}"
                                                    Header="{DynamicResource TrendValue}"
                                                    IsChecked="{Binding Data.ValueCommandChecked, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                                                <MenuItem
                                                    Command="{Binding Data.DeltaCommand, Source={StaticResource Proxy}}"
                                                    Header="{DynamicResource Delta}"
                                                    IsChecked="{Binding Data.DeltaCommandChecked, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" />
                                            </MenuItem.Items>
                                        </MenuItem>
                                        <MenuItem
                                            Command="{Binding Data.ShowValueBarCommand, Source={StaticResource Proxy}}"
                                            Header="{DynamicResource ShowValueBar}"
                                            IsChecked="{Binding Data.ShowValueBarChecked, Source={StaticResource Proxy}}" />
                                        <MenuItem
                                            Command="{Binding Data.ResetCommand, Source={StaticResource Proxy}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                            Header="{DynamicResource UndoZoomOrPan}" />
                                        <MenuItem Command="{Binding Data.PrintCommand, Source={StaticResource Proxy}}" Header="{DynamicResource PrintTrend}" />
                                        <MenuItem Header="{DynamicResource CreateSnapshot..}" IsEnabled="False" />
                                        <Separator />
                                        <MenuItem Command="{Binding Data.ChartPropertiesCommand, Source={StaticResource Proxy}}" Header="{DynamicResource ChartProperties}" />
                                        <!--<MenuItem Command="{Binding Data.ExportTrendServerDataCommand, Source={StaticResource Proxy}}" Header="ExportTrendServerData(For Test)" />-->
                                    </ContextMenu>
                                </oxy:PlotTrendView.ContextMenu>
                            </oxy:PlotTrendView>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>

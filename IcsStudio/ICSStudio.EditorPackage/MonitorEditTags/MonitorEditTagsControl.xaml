<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
<!--  ReSharper disable Xaml.RedundantResource  -->
<UserControl
    x:Class="ICSStudio.EditorPackage.MonitorEditTags.MonitorEditTagsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ICSStudio.EditorPackage.MonitorEditTags.Controls"
    xmlns:controls1="clr-namespace:ICSStudio.Components.Controls;assembly=ICSStudio.Components"
    xmlns:converters="clr-namespace:ICSStudio.Gui.Converters;assembly=ICSStudio.Gui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="clr-namespace:ICSStudio.EditorPackage.MonitorEditTags.UI"
    xmlns:view="clr-namespace:ICSStudio.Gui.View;assembly=ICSStudio.Gui"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="600"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/ToggleStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <converters:IsVisibleConverter x:Key="IsVisibleConverter" />

            <ui:StringFormatConverter x:Key="StringFormatConverter" />

            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Name="Panel">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="10,2"/>
                                <Border BorderThickness="0.35" BorderBrush="Black"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="FloralWhite" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Panel" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="FloralWhite" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  For ComboBoxTree  -->
            <DataTemplate x:Key="ComboBoxDisplayTemplate">
                <TextBlock Text="{Binding Path=Name}" />
            </DataTemplate>

            <SolidColorBrush x:Key="OrangeBackground" Color="Orange" />
            <SolidColorBrush x:Key="DisabledForegroundBrushcb" Color="#888" />
            <SolidColorBrush x:Key="DisabledBackgroundBrushcb" Color="#EEE" />
            <SolidColorBrush x:Key="WindowBackgroundBrushcb" Color="#FFF" />
            <SolidColorBrush x:Key="SelectedBackgroundBrushcb" Color="#DDD" />
            <LinearGradientBrush x:Key="NormalBorderBrushcb" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#B3C7E1" />
                        <GradientStop Offset="1.0" Color="#B3C7E1" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalNormalBorderBrushcb" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="LightGray" />
                        <GradientStop Offset="1.0" Color="LightGray" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="DefaultedBorderBrushcb" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="LightGray" />
                        <GradientStop Offset="1.0" Color="LightGray" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="PressedBorderBrushcb" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#444" />
                        <GradientStop Offset="1.0" Color="#888" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledBorderBrushcb" Color="#AAA" />
            <SolidColorBrush x:Key="SolidBorderBrushcb" Color="#888" />
            <SolidColorBrush x:Key="LightBorderBrushcb" Color="#AAA" />
            <SolidColorBrush x:Key="GlyphBrushcb" Color="#444" />
            <SolidColorBrush x:Key="LightColorBrushcb" Color="#DDD" />

            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="23" />
                    </Grid.ColumnDefinitions>
                    <Rectangle
                        x:Name="Rectangle"
                        Grid.ColumnSpan="2"
                        Width="Auto"
                        Height="Auto"
                        VerticalAlignment="Stretch"
                        Fill="White"
                        RadiusX="0"
                        RadiusY="0"
                        Stroke="{StaticResource NormalBorderBrushcb}" />
                    <Rectangle
                        Grid.Column="0"
                        Width="Auto"
                        Height="Auto"
                        Margin="0,0,-4,0"
                        Fill="{StaticResource WindowBackgroundBrushcb}"
                        RadiusX="0"
                        RadiusY="0"
                        Stroke="{StaticResource NormalBorderBrushcb}" />
                    <Path
                        x:Name="Arrow"
                        Grid.Column="1"
                        Margin="2,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Panel.ZIndex="1"
                        Data="M 0 0 L 4 4 L 8 0 Z"
                        Fill="{StaticResource GlyphBrushcb}" />
                    <Rectangle
                        x:Name="Button"
                        Grid.Column="1"
                        Margin="5,2,2,2"
                        HorizontalAlignment="Stretch"
                        RadiusX="0"
                        RadiusY="0"
                        Stroke="#7793B9">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#FFE3EFFF" />
                                    <GradientStop Offset=".36" Color="#FFC4DDFF" />
                                    <GradientStop Offset=".4" Color="#FFADD1FF" />
                                    <GradientStop Offset="1" Color="#FFC0DBFF" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="Button" Property="Fill" Value="{StaticResource OrangeBackground}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="Rectangle" Property="Fill" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource DisabledBackgroundBrushcb}" />
                        <Setter TargetName="Rectangle" Property="Stroke" Value="{StaticResource DisabledBorderBrushcb}" />
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrushcb}" />
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrushcb}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border
                    x:Name="PART_ContentHost"
                    Background="{TemplateBinding Background}"
                    Focusable="False" />
            </ControlTemplate>

            <Style x:Key="SimpleComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton
                                    Name="ToggleButton"
                                    ClickMode="Press"
                                    Focusable="false"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Template="{StaticResource ComboBoxToggleButton}" />
                                <ContentPresenter
                                    Name="ContentSite"
                                    Margin="3,3,15,3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{StaticResource ComboBoxDisplayTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False" />
                                <TextBox
                                    x:Name="PART_EditableTextBox"
                                    Margin="3,3,15,3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    Focusable="True"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Style="{x:Null}"
                                    Template="{StaticResource ComboBoxTextBox}"
                                    Visibility="Hidden" />
                                <Popup
                                    Name="Popup"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide">
                                    <Grid
                                        Name="DropDown"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        SnapsToDevicePixels="True">
                                        <Border
                                            x:Name="DropDownBorder"
                                            Background="{StaticResource WindowBackgroundBrushcb}"
                                            BorderBrush="{StaticResource SolidBorderBrushcb}"
                                            BorderThickness="1" />
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrushcb}" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="229*" />
            <ColumnDefinition Width="171*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="2"
            IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="200" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Group0" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource Scope:}" />
                <ComboBox
                    x:Name="CmbScope"
                    Grid.Column="1"
                    Width="200"
                    HorizontalAlignment="Stretch"
                    ItemsSource="{Binding ScopeSource}"
                    SelectedValue="{Binding Scope}"
                    SelectedValuePath="TagCollectionContainer"
                    Style="{StaticResource SimpleComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0" Text="{Binding Placeholder, Mode=OneWay}" />
                                <ToggleButton
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource ExpandCollapseToggleStyle}"
                                    Visibility="{Binding HasChildren, Mode=OneWay, Converter={StaticResource IsVisibleConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    Text="{Binding Name, Mode=OneWay}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter  Property="IsEnabled" Value="{Binding IsEnable}" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="1" Visibility="{Binding DataContextVisibility}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="78*" SharedSizeGroup="Group0" />
                    <ColumnDefinition Width="65*" />
                    <ColumnDefinition Width="164*" />
                    <ColumnDefinition Width="93*" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    IsEnabled="{Binding IsDataContextEnabled}"
                    Text="Data Context:" />

                <ComboBox
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    DisplayMemberPath="Title"
                    IsEnabled="{Binding IsDataContextEnabled}"
                    ItemsSource="{Binding DataContextSource}"
                    SelectedItem="{Binding CurrentDataContext}" />

            </Grid>

            <Grid
                Grid.Row="0"
                Grid.Column="1"
                Margin="5,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="{DynamicResource Show:}" />
                <ComboBox
                    Grid.Column="1"
                    Margin="0,0,5,0"
                    ItemsSource="{Binding FilterType}"
                    SelectedItem="{Binding SelectedFilterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                </ComboBox>
            </Grid>

            <Grid
                Grid.Row="0"
                Grid.Column="2"
                HorizontalAlignment="Stretch">
                <ComboBox
                    Grid.Row="0"
                    Grid.Column="0"
                    Padding="25,0,0,0"
                    HorizontalAlignment="Stretch"
                    IsEditable="True"
                    ItemsSource="{Binding FilterNameHistory}"
                    SelectedItem="{Binding SelectedFilterName}"
                    Text="{Binding FilterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=30}" />
                <Button
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="24"
                    Height="21"
                    MinWidth="20"
                    Margin="2,2,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Click="ButtonBase_OnClick">
                    <Button.ContextMenu>
                        <ContextMenu Opened="ContextMenu_OnOpened">
                            <MenuItem
                                Click="MenuItem_OnClick"
                                Header="{DynamicResource Filter on Name}"
                                IsChecked="{Binding IsFilterOnName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <MenuItem
                                Click="MenuItem_OnClick"
                                Header="{DynamicResource Filter on Description}"
                                IsChecked="{Binding IsFilterOnDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <MenuItem
                                Click="MenuItem_OnClick"
                                Header="{DynamicResource Filter on Both}"
                                IsChecked="{Binding IsFilterOnBoth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </ContextMenu>
                    </Button.ContextMenu>
                    <Button.Content>
                        <Path Fill="Gray">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure
                                        IsClosed="True"
                                        IsFilled="True"
                                        StartPoint="0,0">
                                        <LineSegment Point="7,10" />
                                        <LineSegment Point="7,18" />
                                        <LineSegment Point="9,18" />
                                        <LineSegment Point="9,10" />
                                        <LineSegment Point="16,0" />
                                    </PathFigure>
                                    <PathFigure
                                        IsClosed="True"
                                        IsFilled="True"
                                        StartPoint="11,14">
                                        <LineSegment Point="14,17" />
                                        <LineSegment Point="17,14" />
                                    </PathFigure>
                                </PathGeometry>

                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
            </Grid>
        </Grid>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="342" />
            </Grid.ColumnDefinitions>

            <TabControl
                x:Name="TabControl"
                Grid.Column="0"
                MinWidth="400"
                SelectedIndex="{Binding SelectedIndex}"
                TabStripPlacement="Bottom">
                <TabItem Width="125" Header="{DynamicResource Monitor Tags}">
                    <controls:MonitorTagsControl x:Name="MonitorTagsControl" DataContext="{Binding MonitorTagsViewModel}" />
                </TabItem>

                <TabItem Width="125" Header="{DynamicResource Edit Tags}">
                    <controls:EditTagsControl x:Name="EditTagsControl" DataContext="{Binding EditTagsViewModel}" />
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

            <Grid Grid.Column="2">
                <xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding PropertyGrid, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedObjectTypeName="{DynamicResource Properties}" >
                    <xctk:PropertyGrid.Resources>
                        <view:BindingProxy x:Key="Proxy" Data="{Binding PropertyGrid}" />
                        <Style TargetType="TextBox">
                            <Setter Property="Height" Value="19" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Height" Value="19" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                        <Style TargetType="Button">
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                        <Style TargetType="Grid">
                            <Setter Property="Margin" Value="0" />
                        </Style>
                    </xctk:PropertyGrid.Resources>

                    <xctk:PropertyGrid.EditorDefinitions>
                        <xctk:EditorTemplateDefinition TargetProperties="DataType">
                            <xctk:EditorTemplateDefinition.EditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <controls1:FastAutoCompleteTextBox
                                            Height="22"
                                            HorizontalAlignment="Left"
                                            BorderThickness="0"
                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}"
                                            IsTextCompletionEnabled="True"
                                            ItemsSource="{Binding Data.AllDataTypeNames, Source={StaticResource Proxy}}"
                                            MaxDropDownHeight="0"
                                            Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />

                                        <Button
                                            Height="22"
                                            MinWidth="25"
                                            HorizontalAlignment="Right"
                                            Command="{Binding Data.SelectDataTypeCommand, Source={StaticResource Proxy}}"
                                            Content="..."
                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}" />
                                    </Grid>
                                </DataTemplate>
                            </xctk:EditorTemplateDefinition.EditingTemplate>
                        </xctk:EditorTemplateDefinition>

                        <xctk:EditorTemplateDefinition TargetProperties="Value">
                            <xctk:EditorTemplateDefinition.EditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Canvas
                                            Grid.Column="0"
                                            MinWidth="6"
                                            MaxWidth="20"
                                            HorizontalAlignment="Left"
                                            SnapsToDevicePixels="True"
                                            Visibility="{Binding Data.IsPropertiesConstantVisibility, Source={StaticResource Proxy}, Converter={StaticResource IsVisibleConverter}}">
                                            <Path
                                                Fill="Lavender"
                                                Stroke="Blue"
                                                StrokeThickness="1">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathGeometry.Figures>
                                                            <PathFigureCollection>
                                                                <PathFigure IsClosed="True" StartPoint="3,5">
                                                                    <PathFigure.Segments>
                                                                        <PathSegmentCollection>
                                                                            <LineSegment Point="8,5" />
                                                                            <LineSegment Point="8,9" />
                                                                            <LineSegment Point="3,9" />
                                                                        </PathSegmentCollection>
                                                                    </PathFigure.Segments>
                                                                </PathFigure>
                                                            </PathFigureCollection>
                                                        </PathGeometry.Figures>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Canvas>
                                        <TextBox HorizontalAlignment="Right" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                                            <TextBox.Text>
                                                <MultiBinding Converter="{StaticResource StringFormatConverter}">
                                                    <Binding Path="Data.Value" Source="{StaticResource Proxy}" />
                                                    <Binding Path="Data.Style" Source="{StaticResource Proxy}" />
                                                </MultiBinding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </xctk:EditorTemplateDefinition.EditingTemplate>
                        </xctk:EditorTemplateDefinition>

                    </xctk:PropertyGrid.EditorDefinitions>

                </xctk:PropertyGrid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
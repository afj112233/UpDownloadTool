<UserControl x:Class="ICSStudio.EditorPackage.Reference.Extend.ScopeTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICSStudio.EditorPackage.Reference.Extend"
             xmlns:filter1="clr-namespace:ICSStudio.Dialogs.Filter;assembly=ICSStudio.Dialogs"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary
                Source="pack://application:,,,/ICSStudio.Gui;component/Resources/styles/Default.xaml" />
        </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.Resources>
            <filter1:LeftMarginConverter x:Key="LeftMarginConverter"></filter1:LeftMarginConverter>
            <filter1:GridLeftMarginConverter x:Key="GridLeftMarginConverter"></filter1:GridLeftMarginConverter>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                                <!-- Rectangle 9x9 pixels -->
                                <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Silver" Offset="0.5"/>
                                            <GradientStop Color="LightGray" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!-- 画一个垂直方向的直线 -->
                                <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                                <!-- 画一个水平方向的直线 -->
                                <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- 通过IsChecked判断折叠还是展开 -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="ExpandPath" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <filter1:TreeViewLineConverter x:Key="LineConverter"/>
            <!-- （通用）可视化树孩子样式 -->
            <Style TargetType="{x:Type TreeViewItem}">
                <EventSetter Event="MouseLeftButtonUp" Handler="EventSetter_OnHandler"></EventSetter>
                <Setter Property="Background" Value="Transparent"/>
                <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"></Setter>-->
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Foreground" Value="#FF565656"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="TabIndex" Value="{Binding Index}"></Setter>
                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Margin="{Binding Converter={StaticResource GridLeftMarginConverter},RelativeSource={RelativeSource FindAncestor,AncestorType=TreeViewItem}}"
                                  >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition MinWidth="20" Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="20"/>
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <!-- Connecting Lines -->
                                <!-- Horizontal line -->
                              
                                <Rectangle x:Name="HorLn" Margin="8,0,0,0" Height="1" Stroke="Black" Grid.Column="1"/>
                                <!-- Vertical line -->
                                <Rectangle x:Name="VerLn" Width="1" Stroke="Black" Margin="-1,-3,0,0" Grid.RowSpan="2" Grid.Column="1"/>
                                <!--<ItemsPresenter x:Name="ItemsPresenter"></ItemsPresenter>-->
                                <ToggleButton x:Name="Expander" 
                                      Grid.Column="1" 
                                      Grid.Row="0"  
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                HorizontalAlignment="Left"
                                Grid.Column="2"
                                Margin="1"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                                    <!--<ContentPresenter x:Name="PART_Header" 
                                              ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                    <TextBlock Text="{Binding Name}" Width="145"></TextBlock>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" 
                                        Grid.ColumnSpan="2" 
                                        Grid.Column="2" 
                                        Grid.Row="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="True">
                                    <Setter Property="Margin" Value="-20,0,0,0"></Setter>
                                </Trigger>
                                <!-- 当前层最后一个元素不画下方垂直线 -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                    <Setter TargetName="VerLn" Property="Height" Value="15"/>
                                    <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                                </DataTrigger>
                                <!-- Root第一个元素不显示上方垂直线 -->
                                <Trigger Property="TabIndex" Value="1">
                                    <Setter TargetName="VerLn" Property="Margin" Value="-1,12,0,0"/>
                                    <Setter TargetName="VerLn" Property="Height" Value="Auto"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <TreeView ItemsSource="{Binding Scopes}" Width="auto">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}"></HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
